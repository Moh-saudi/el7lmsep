// ููู ูุฅูุดุงุก ุงูุฅุดุนุงุฑุงุช ุงูุชุฌุฑูุจูุฉ
// ูููู ุชุดุบููู ูู console ุงููุชุตูุญ

import { addDoc, collection, serverTimestamp } from 'firebase/firestore';
import { db } from './config';

// ุฅูุดุงุก ุฅุดุนุงุฑ ุชุฌุฑูุจู
export async function createTestNotification(userId) {
  try {
    const notificationsRef = collection(db, 'notifications');
    
    const testNotification = {
      userId: userId,
      title: 'ุฅุดุนุงุฑ ุชุฌุฑูุจู',
      message: 'ูุฐุง ุฅุดุนุงุฑ ุชุฌุฑูุจู ูุงุฎุชุจุงุฑ ูุธุงู ุงูุฅุดุนุงุฑุงุช',
      type: 'info',
      isRead: false,
      scope: 'system',
      createdAt: serverTimestamp(),
      updatedAt: serverTimestamp()
    };
    
    const docRef = await addDoc(notificationsRef, testNotification);
    console.log('โ ุชู ุฅูุดุงุก ุฅุดุนุงุฑ ุชุฌุฑูุจู:', docRef.id);
    return docRef.id;
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุฅุดุนุงุฑ ุงูุชุฌุฑูุจู:', error);
    throw error;
  }
}

// ุฅูุดุงุก ุฅุดุนุงุฑ ุชูุงุนูู ุชุฌุฑูุจู
export async function createTestInteractionNotification(userId) {
  try {
    const interactionNotificationsRef = collection(db, 'interaction_notifications');
    
    const testNotification = {
      userId: userId,
      viewerId: 'test-viewer',
      viewerName: 'ูุณุชุฎุฏู ุชุฌุฑูุจู',
      viewerType: 'player',
      viewerAccountType: 'player',
      type: 'profile_view',
      title: 'ุดุฎุต ูุง ุดุงูุฏ ูููู ุงูุดุฎุตู',
      message: 'ูุณุชุฎุฏู ุชุฌุฑูุจู ูุงู ุจูุดุงูุฏุฉ ูููู ุงูุดุฎุตู',
      emoji: '๐',
      isRead: false,
      priority: 'medium',
      createdAt: serverTimestamp()
    };
    
    const docRef = await addDoc(interactionNotificationsRef, testNotification);
    console.log('โ ุชู ุฅูุดุงุก ุฅุดุนุงุฑ ุชูุงุนูู ุชุฌุฑูุจู:', docRef.id);
    return docRef.id;
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุฅุดุนุงุฑ ุงูุชูุงุนูู ุงูุชุฌุฑูุจู:', error);
    throw error;
  }
}

// ุฅูุดุงุก ุฅุดุนุงุฑ ุฏูุน ุชุฌุฑูุจู
export async function createTestPaymentNotification(userId) {
  try {
    const notificationsRef = collection(db, 'notifications');
    
    const testNotification = {
      userId: userId,
      title: 'ุชู ุงุณุชูุงู ุฏูุนุฉ ุฌุฏูุฏุฉ',
      message: 'ุชู ุงุณุชูุงู ุฏูุนุฉ ุจูููุฉ 500 ุฌููู ูุตุฑู',
      type: 'success',
      isRead: false,
      link: '/dashboard/subscription',
      metadata: {
        paymentId: 'test-payment-123',
        amount: 500,
        currency: 'EGP',
        paymentMethod: 'ุจุทุงูุฉ ุงุฆุชูุงู'
      },
      scope: 'system',
      createdAt: serverTimestamp(),
      updatedAt: serverTimestamp()
    };
    
    const docRef = await addDoc(notificationsRef, testNotification);
    console.log('โ ุชู ุฅูุดุงุก ุฅุดุนุงุฑ ุฏูุน ุชุฌุฑูุจู:', docRef.id);
    return docRef.id;
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุฅุดุนุงุฑ ุงูุฏูุน ุงูุชุฌุฑูุจู:', error);
    throw error;
  }
}

// ุฅูุดุงุก ุฅุดุนุงุฑ ุชุญุฐูุฑ ุชุฌุฑูุจู
export async function createTestWarningNotification(userId) {
  try {
    const notificationsRef = collection(db, 'notifications');
    
    const testNotification = {
      userId: userId,
      title: 'ุงุดุชุฑุงูู ุนูู ูุดู ุงูุงูุชูุงุก',
      message: 'ุณููุชูู ุงุดุชุฑุงูู ุฎูุงู 3 ุฃูุงู. ูุฑุฌู ุชุฌุฏูุฏ ุงูุงุดุชุฑุงู',
      type: 'warning',
      isRead: false,
      link: '/dashboard/subscription',
      metadata: {
        daysRemaining: 3
      },
      scope: 'system',
      createdAt: serverTimestamp(),
      updatedAt: serverTimestamp()
    };
    
    const docRef = await addDoc(notificationsRef, testNotification);
    console.log('โ ุชู ุฅูุดุงุก ุฅุดุนุงุฑ ุชุญุฐูุฑ ุชุฌุฑูุจู:', docRef.id);
    return docRef.id;
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุฅุดุนุงุฑ ุงูุชุญุฐูุฑ ุงูุชุฌุฑูุจู:', error);
    throw error;
  }
}

// ุฏุงูุฉ ูุฅูุดุงุก ุฌููุน ุงูุฅุดุนุงุฑุงุช ุงูุชุฌุฑูุจูุฉ
export async function createAllTestNotifications(userId) {
  try {
    console.log('๐ ุจุฏุก ุฅูุดุงุก ุงูุฅุดุนุงุฑุงุช ุงูุชุฌุฑูุจูุฉ...');
    
    await Promise.all([
      createTestNotification(userId),
      createTestInteractionNotification(userId),
      createTestPaymentNotification(userId),
      createTestWarningNotification(userId)
    ]);
    
    console.log('๐ ุชู ุฅูุดุงุก ุฌููุน ุงูุฅุดุนุงุฑุงุช ุงูุชุฌุฑูุจูุฉ ุจูุฌุงุญ!');
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุฅุดุนุงุฑุงุช ุงูุชุฌุฑูุจูุฉ:', error);
  }
}

// ุฏุงูุฉ ูุฅูุดุงุก ุฅุดุนุงุฑุงุช ูุชุนุฏุฏุฉ
export async function createMultipleNotifications(userId, count = 5) {
  try {
    console.log(`๐ ุจุฏุก ุฅูุดุงุก ${count} ุฅุดุนุงุฑุงุช ุชุฌุฑูุจูุฉ...`);
    
    const promises = [];
    for (let i = 0; i < count; i++) {
      promises.push(createTestNotification(userId));
    }
    
    await Promise.all(promises);
    console.log(`๐ ุชู ุฅูุดุงุก ${count} ุฅุดุนุงุฑุงุช ุชุฌุฑูุจูุฉ ุจูุฌุงุญ!`);
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุฅุดุนุงุฑุงุช ุงููุชุนุฏุฏุฉ:', error);
  }
}

