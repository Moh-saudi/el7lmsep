#!/usr/bin/env node

/**
 * ุณูุฑูุจุช ุฅุตูุงุญ ูุดุงูู Next.js
 * ูุญู ูุดุงูู ChunkLoadError ู hydration errors
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('๐ง ุจุฏุก ุฅุตูุงุญ ูุดุงูู Next.js...\n');

// 1. ูุณุญ ูุฌูุฏ .next
console.log('1๏ธโฃ ูุณุญ ูุฌูุฏ .next...');
try {
  if (fs.existsSync('.next')) {
    fs.rmSync('.next', { recursive: true, force: true });
    console.log('โ ุชู ูุณุญ ูุฌูุฏ .next');
  } else {
    console.log('โน๏ธ ูุฌูุฏ .next ุบูุฑ ููุฌูุฏ');
  }
} catch (error) {
  console.log('โ ุฎุทุฃ ูู ูุณุญ ูุฌูุฏ .next:', error.message);
}

// 2. ูุณุญ ูุฌูุฏ node_modules/.cache
console.log('\n2๏ธโฃ ูุณุญ ุฐุงูุฑุฉ ุงูุชุฎุฒูู ุงููุคูุช...');
try {
  const cacheDir = path.join('node_modules', '.cache');
  if (fs.existsSync(cacheDir)) {
    fs.rmSync(cacheDir, { recursive: true, force: true });
    console.log('โ ุชู ูุณุญ ุฐุงูุฑุฉ ุงูุชุฎุฒูู ุงููุคูุช');
  } else {
    console.log('โน๏ธ ูุฌูุฏ ุงูุฐุงูุฑุฉ ุงููุคูุชุฉ ุบูุฑ ููุฌูุฏ');
  }
} catch (error) {
  console.log('โ ุฎุทุฃ ูู ูุณุญ ุงูุฐุงูุฑุฉ ุงููุคูุชุฉ:', error.message);
}

// 3. ูุณุญ ูููุงุช ุงูุชุฎุฒูู ุงููุคูุช ุงูุฃุฎุฑู
console.log('\n3๏ธโฃ ูุณุญ ูููุงุช ุงูุชุฎุฒูู ุงููุคูุช ุงูุฃุฎุฑู...');
const tempFiles = [
  '.turbo',
  'dist',
  'build',
  '.swc'
];

tempFiles.forEach(file => {
  try {
    if (fs.existsSync(file)) {
      fs.rmSync(file, { recursive: true, force: true });
      console.log(`โ ุชู ูุณุญ ${file}`);
    }
  } catch (error) {
    console.log(`โ ุฎุทุฃ ูู ูุณุญ ${file}:`, error.message);
  }
});

// 4. ูุณุญ npm cache
console.log('\n4๏ธโฃ ูุณุญ npm cache...');
try {
  execSync('npm cache clean --force', { stdio: 'inherit' });
  console.log('โ ุชู ูุณุญ npm cache');
} catch (error) {
  console.log('โ ุฎุทุฃ ูู ูุณุญ npm cache:', error.message);
}

// 5. ุฅุนุงุฏุฉ ุชุซุจูุช ุงูุชุจุนูุงุช
console.log('\n5๏ธโฃ ุฅุนุงุฏุฉ ุชุซุจูุช ุงูุชุจุนูุงุช...');
try {
  execSync('npm install', { stdio: 'inherit' });
  console.log('โ ุชู ุฅุนุงุฏุฉ ุชุซุจูุช ุงูุชุจุนูุงุช');
} catch (error) {
  console.log('โ ุฎุทุฃ ูู ุฅุนุงุฏุฉ ุชุซุจูุช ุงูุชุจุนูุงุช:', error.message);
}

// 6. ุจูุงุก ุงููุดุฑูุน
console.log('\n6๏ธโฃ ุจูุงุก ุงููุดุฑูุน...');
try {
  execSync('npm run build', { stdio: 'inherit' });
  console.log('โ ุชู ุจูุงุก ุงููุดุฑูุน ุจูุฌุงุญ');
} catch (error) {
  console.log('โ ุฎุทุฃ ูู ุจูุงุก ุงููุดุฑูุน:', error.message);
}

console.log('\n๐ ุชู ุงูุงูุชูุงุก ูู ุฅุตูุงุญ ูุดุงูู Next.js!');
console.log('\n๐ ุงูุฎุทูุงุช ุงูุชุงููุฉ:');
console.log('1. ุฃุนุฏ ุชุดุบูู ุฎุงุฏู ุงูุชุทููุฑ: npm run dev');
console.log('2. ุงูุณุญ ุฐุงูุฑุฉ ุงูุชุฎุฒูู ุงููุคูุช ูููุชุตูุญ (Ctrl+Shift+R)');
console.log('3. ุชุญูู ูู ุฃู ุงููุดููุฉ ุชู ุญููุง');
