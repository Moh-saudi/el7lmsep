// ๐ ุฅุตูุงุญ ุณุฑูุน ูุฃุฎุทุงุก ุงูุตูุฑ
// Quick Image Fix Script

console.log('๐ ุจุฏุก ุงูุฅุตูุงุญ ุงูุณุฑูุน ูุฃุฎุทุงุก ุงูุตูุฑ...');

// ุฅุนุฏุงุฏ Firebase
const firebaseConfig = {
    apiKey: "AIzaSyDGpAHia_wEmrhnmYjrPf1n1TrAzwEMiAI",
    authDomain: "hagz-85b65.firebaseapp.com",
    projectId: "hagz-85b65",
    storageBucket: "hagz-85b65.appspot.com",
    messagingSenderId: "692767777581",
    appId: "1:692767777581:web:5b998ed1c834bc35b78b5f"
};

// ุฅุตูุงุญ ุณุฑูุน ุดุงูู
async function quickImageFix() {
    try {
        console.log('๐ฑ ุชุญููู Firebase...');
        
        // ุงุณุชูุฑุงุฏ Firebase ุจุดูู ุฏููุงูููู
        const { initializeApp } = await import('https://www.gstatic.com/firebasejs/9.22.0/firebase-app.js');
        const { getFirestore, collection, getDocs, doc, updateDoc, writeBatch } = await import('https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore.js');
        
        const app = initializeApp(firebaseConfig);
        const db = getFirestore(app);
        
        console.log('๐ ูุญุต ูุงุนุฏุฉ ุงูุจูุงูุงุช...');
        
        // ุงูุญุตูู ุนูู ุฌููุน ุงููุงุนุจูู
        const playersSnapshot = await getDocs(collection(db, 'players'));
        console.log(`๐ ุชู ุงูุนุซูุฑ ุนูู ${playersSnapshot.size} ูุงุนุจ`);
        
        // ุฅุญุตุงุฆูุงุช
        let testUrlCount = 0;
        let brokenSupabaseCount = 0;
        let totalFixed = 0;
        
        // ุงุณุชุฎุฏุงู batch ููุชุญุฏูุซ ุงูุฌูุงุนู
        const batch = writeBatch(db);
        let batchCount = 0;
        
        // ูุญุต ูู ูุงุนุจ
        for (const docSnapshot of playersSnapshot.docs) {
            const data = docSnapshot.data();
            let needsUpdate = false;
            const updates = {};
            
            // ูุญุต profile_image_url
            if (data.profile_image_url) {
                const imageUrl = data.profile_image_url;
                
                if (imageUrl.includes('test-url.com')) {
                    updates.profile_image_url = '/images/default-avatar.png';
                    testUrlCount++;
                    needsUpdate = true;
                }
                
                if (imageUrl.includes('supabase.co') && 
                    (imageUrl.includes('undefined') || imageUrl.includes('null') || !imageUrl.includes('default'))) {
                    updates.profile_image_url = '/images/default-avatar.png';
                    brokenSupabaseCount++;
                    needsUpdate = true;
                }
            }
            
            // ูุญุต profile_image
            if (data.profile_image) {
                const imageUrl = data.profile_image;
                
                if (imageUrl.includes('test-url.com')) {
                    updates.profile_image = '/images/default-avatar.png';
                    needsUpdate = true;
                }
                
                if (imageUrl.includes('supabase.co') && 
                    (imageUrl.includes('undefined') || imageUrl.includes('null') || !imageUrl.includes('default'))) {
                    updates.profile_image = '/images/default-avatar.png';
                    needsUpdate = true;
                }
            }
            
            // ุฅุถุงูุฉ ููู batch ุฅุฐุง ุงุญุชุงุฌ ุชุญุฏูุซ
            if (needsUpdate) {
                batch.update(doc(db, 'players', docSnapshot.id), updates);
                totalFixed++;
                batchCount++;
                
                // ุชูููุฐ batch ูู 500 ุนูููุฉ ูุชุฌูุจ ุญุฏูุฏ Firestore
                if (batchCount >= 500) {
                    await batch.commit();
                    console.log(`โ ุชู ุญูุธ ${batchCount} ุชุญุฏูุซ...`);
                    batchCount = 0;
                }
                
                console.log(`๐ง ุฅุตูุงุญ: ${data.full_name || docSnapshot.id}`);
            }
        }
        
        // ุชูููุฐ ุฃู ุชุญุฏูุซุงุช ูุชุจููุฉ
        if (batchCount > 0) {
            await batch.commit();
            console.log(`โ ุชู ุญูุธ ${batchCount} ุชุญุฏูุซ ุฃุฎูุฑ...`);
        }
        
        // ุชูุฑูุฑ ุงููุชุงุฆุฌ
        console.log('\n๐ ุชู ุฅููุงุก ุงูุฅุตูุงุญ ุงูุณุฑูุน!');
        console.log('๐ ุงููุชุงุฆุฌ:');
        console.log(`   ๐ ุตูุฑ test-url ุชู ุฅุตูุงุญูุง: ${testUrlCount}`);
        console.log(`   ๐พ ุตูุฑ Supabase ุชู ุฅุตูุงุญูุง: ${brokenSupabaseCount}`);
        console.log(`   โ ุฅุฌูุงูู ุงููููุงุช ุงูููุญุฏุซุฉ: ${totalFixed}`);
        
        if (totalFixed > 0) {
            console.log('\n๐ก ุฃุนุฏ ุชุดุบูู ุฎุงุฏู ุงูุชุทููุฑ ุงูุขู ูุฑุคูุฉ ุงููุชุงุฆุฌ');
            console.log('๐ก ุชุดุบูู: npm run dev');
        } else {
            console.log('\nโ ูุง ุชูุฌุฏ ูุดุงูู! ุฌููุน ุงูุตูุฑ ุณูููุฉ');
        }
        
        return {
            testUrlCount,
            brokenSupabaseCount,
            totalFixed,
            success: true
        };
        
    } catch (error) {
        console.error('โ ุฎุทุฃ ูู ุงูุฅุตูุงุญ ุงูุณุฑูุน:', error);
        return {
            success: false,
            error: error.message
        };
    }
}

// ุชุดุบูู ุงูุฅุตูุงุญ ุงูุณุฑูุน ุชููุงุฆูุงู
quickImageFix().then(result => {
    if (result.success) {
        console.log('\n๐ ุงูุฅุตูุงุญ ุงูุณุฑูุน ููุชูู!');
        
        // ุฅุถุงูุฉ ูุตุงุฆุญ ูููุทูุฑ
        if (result.totalFixed > 0) {
            console.log('\n๐ ุฎุทูุงุช ูุง ุจุนุฏ ุงูุฅุตูุงุญ:');
            console.log('1. ุฃุนุฏ ุชุดุบูู ุฎุงุฏู ุงูุชุทููุฑ');
            console.log('2. ุงูุณุญ ุฐุงูุฑุฉ ุงูุชุฎุฒูู ุงููุคูุช ูููุชุตูุญ');
            console.log('3. ุงุฎุชุจุฑ ุงูุตูุฑ ูู ุตูุญุงุช ูุฎุชููุฉ');
            console.log('\n๐ก ูุตูุญุฉ: ุงุณุชุฎุฏู SafeImage component ููุตูุฑ ุงูุฌุฏูุฏุฉ');
        }
    }
});

// ุฅุถุงูุฉ ุงูุฏุงูุฉ ูููุงูุฐุฉ ุงูุนุงูุฉ
window.quickImageFix = quickImageFix; 
